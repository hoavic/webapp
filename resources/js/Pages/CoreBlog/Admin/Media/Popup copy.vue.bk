<script setup>

import PopupLayout from '@/Layouts/PopupLayout.vue';
import Pagination from '@/Components/Pagination.vue';
import { onMounted, reactive, ref } from 'vue';
import Alert from '@/Pages/CoreBlog/Admin/Alert.vue';
import MediaUpload from '@/Pages/CoreBlog/Admin/Media/MediaUpload.vue';
import MediaAction from '@/Pages/CoreBlog/Admin/Media/MediaAction.vue';
import PopupGrid from '@/Pages/CoreBlog/Admin/Media/PopupGrid.vue';
import { router, useForm } from '@inertiajs/vue3';
import SecondaryButton from '@/Components/SecondaryButton.vue';


const props = defineProps({
    media_type: String,
    search: String,
    //medias: Object,
    available_media_types: Object,
    errors: Object,
    tinymce: Object
});

let react = reactive({
    medias: undefined
});

onMounted(() => {

// This will show the variable as empty.
console.log(react.medias);

// We fire a partial reload to load the data in:
/*     router.get(route('admin.medias.popup-data'), {
        onSuccess: page => {
            console.log(page);
        },
    }); */

    axios.get(route('admin.medias.popup-data')).then(response => {
        /* console.log(response.data); */
        react.medias = response.data;
        console.log(react.medias);
    }).catch(error => {
        console.error(error);
    });
});

function loadMore() {
    if(react.medias.current_page >= react.medias.last_page) {return}
    axios.get(route('admin.medias.popup-data') + '?page=' + (react.medias.current_page + 1)).then(response => {
        /* console.log(response.data); */
        react.medias.data.push(...response.data.data);
        console.log(react.medias);
    }).catch(error => {
        console.error(error);
    });
}

</script>

<template>
<!--     <PopupLayout :title="media_type + ' Index'"> -->

        <!-- <Alert :errors="errors"></Alert> -->

        <div class="py-8">
            <div class="lg:flex lg:flex-row">

                <div class="w-full lg:w-[200px]">
                    <div v-for="mt in available_media_types">
                        <a :href="route('admin.medias.index') + '?media_type=' + mt" class="block my-2 mx-4 py-2 px-4 rounded-lg"
                            :class="mt === media_type ? 'bg-blue-900 text-white' : 'bg-gray-300'">{{ mt }}</a>
                    </div>
                    <MediaUpload :media_type="media_type"></MediaUpload>
                </div>

                <div class="lg:flex-1 lg:px-6">
                    <MediaAction :media_type="media_type" :search="search"/>
                    <template v-if="react.medias === undefined">
                        <p>Loading...</p>
                    </template>
                    <template v-else>
                        <PopupGrid :media_type="media_type" :data="react.medias.data"></PopupGrid>
                        <SecondaryButton type="button" @click.prevent="loadMore"
                            class="my-4">Load more</SecondaryButton>
                        <!-- <Pagination :links="react.medias.links" class="px-4"></Pagination> -->
                    </template>
                </div>

            </div>
        </div>
 <!--    </PopupLayout> -->
</template>
